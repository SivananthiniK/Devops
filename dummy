#!/usr/bin/env python

import sys
import json
import argparse
import os
import time
import logging

# Dummy logger setup
logger = logging.getLogger(__name__)
FORMAT = "%(asctime)s - MOCK - %(levelname)s - %(message)s"
logging.basicConfig(format=FORMAT, level=logging.INFO)

# Dummy configuration getter
def getconfig(profile, variable, environment, default=""):
    print(f"üîß getconfig(profile='{profile}', variable='{variable}', environment='{environment}') called")
    return f"DUMMY_{variable.upper()}"

# Dummy token generation
def create_token(client_id, value):
    print(f"üîê create_token(client_id='{client_id}', value='{value}') called")
    return {'Authorization': 'Bearer DUMMY_ACCESS_TOKEN', "Content-Type": "application/json"}

# Dummy upload for small files
def upload(endpoint, file_path, drive):
    print(f"üì§ upload(endpoint='{endpoint}', file_path='{file_path}', drive='{drive}') called")
    return {
        'webUrl': f"https://dummy.sharepoint.com/sites/mocksite/{os.path.basename(file_path)}",
        'id': 'dummy-id',
        'parentReference': {'driveId': 'dummy-drive-id'}
    }

# Dummy upload for large files
def session_upload(endpoint, file_path, drive):
    print(f"üì§ session_upload(endpoint='{endpoint}', file_path='{file_path}', drive='{drive}') called")
    for i in range(3):
        print(f"  üß© Uploading chunk {i + 1}...")
        time.sleep(0.5)
    return {
        'webUrl': f"https://dummy.sharepoint.com/sites/mocksite/{os.path.basename(file_path)}",
        'id': 'dummy-id',
        'parentReference': {'driveId': 'dummy-drive-id'}
    }

# Dummy sharing link generator
def create_sharing_link(drive, item, emails, groups, file_type):
    print(f"üîó create_sharing_link(drive='{drive}', item='{item}', emails='{emails}', groups='{groups}', type='{file_type}') called")
    return f"https://dummy.sharepoint.com/sites/mocksite/sharing/{item}"

# Main function
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('file_path', type=str, help='Path to the file')
    parser.add_argument('--site', default="Devops Drive", type=str)
    parser.add_argument('--library', default="Documents", type=str)
    parser.add_argument('--p_type', default='blocksDownload', choices=['blocksDownload', 'view', 'edit'])
    parser.add_argument('--drive_path', default='', type=str)
    parser.add_argument('--link', default=False, action='store_true')
    parser.add_argument('--mail', default=None)
    parser.add_argument('--group', default=None)
    args = parser.parse_args()

    # Simulate values
    client_id = getconfig('onedrive', 'client_id', 'ONEDRIVE_CLIENTID')
    value = getconfig('onedrive', 'value', 'ONEDRIVE_VALUE')
    header = create_token(client_id, value)
    base_url = "https://graph.microsoft.com/v1.0"

    print(f"üìÅ Simulating upload to site: {args.site}, library: {args.library}")

    file_path = args.file_path
    file_size = os.stat(file_path).st_size if os.path.exists(file_path) else 1024 * 1024  # Simulate 1MB if file missing

    endpoint = f"{base_url}/sites/dummy-site-id/lists/dummy-library-id/drive/root:/"

    if file_size < 4100000:
        result = upload(endpoint, file_path, args.drive_path)
    else:
        result = session_upload(endpoint, file_path, args.drive_path)

    if result['webUrl']:
        logger.info("‚úÖ Upload simulated successfully")
        if args.link or args.group or args.mail:
            sharing_link = create_sharing_link(
                result['parentReference']['driveId'],
                result['id'],
                args.mail,
                args.group,
                args.p_type
            )
            if sharing_link:
                logger.info("‚úÖ Sharing link generated")
                print(f"üìé Sharing Link: {sharing_link}")
            else:
                logger.error("‚ùå Sharing link generation failed")
                sys.exit(2)
        else:
            print(f"üìé Sharing Link: {result['webUrl']}")





python dummy_upload.py testfile.txt --link --mail=test@example.com --group=devops


      echo "Hello Dummy SharePoint!" > testfile.txt
