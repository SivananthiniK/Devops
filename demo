import requests
from datetime import datetime, timedelta

access_token = "YOUR_ACCESS_TOKEN"
room_emails = [
    "room1@yourdomain.com",
    "room2@yourdomain.com",
    "room3@yourdomain.com"
]

start = "2025-06-13T09:00:00"
end = "2025-06-13T17:00:00"

headers = {
    "Authorization": f"Bearer {access_token}",
    "Prefer": 'outlook.timezone="India Standard Time"'
}

for user_email in room_emails:
    print(f"\nðŸ“… Availability for: {user_email}")
    url = f"https://graph.microsoft.com/v1.0/users/{user_email}/calendarView"
    params = {
        "startDateTime": start,
        "endDateTime": end
    }

    response = requests.get(url, headers=headers, params=params)
    if response.status_code != 200:
        print(f"Error fetching calendar for {user_email}: {response.text}")
        continue

    events = response.json().get("value", [])
    slots = {}

    # Build time slots
    start_time = datetime.fromisoformat(start)
    end_time = datetime.fromisoformat(end)

    while start_time < end_time:
        slot_end = start_time + timedelta(hours=1)
        slots[start_time.strftime('%H:%M')] = "free"
        for event in events:
            event_start = datetime.fromisoformat(event["start"]["dateTime"])
            event_end = datetime.fromisoformat(event["end"]["dateTime"])
            status = event.get("showAs", "busy")
            if start_time < event_end and slot_end > event_start:
                slots[start_time.strftime('%H:%M')] = status
                break
        start_time = slot_end

    for time, status in slots.items():
        print(f"{time} - {status}")




ðŸ“… Availability for: room1@yourdomain.com
09:00 - busy
10:00 - free
11:00 - busy
...

ðŸ“… Availability for: room2@yourdomain.com
09:00 - free
10:00 - free
11:00 - busy
...

ðŸ“… Availability for: room3@yourdomain.com
...

