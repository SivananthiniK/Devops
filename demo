const [locationFilter, setLocationFilter] = useState('');
const filteredRooms = rooms.filter(room => {
    const matchesLocation = !locationFilter || room.location === locationFilter;
    const matchesSearch = !searchQuery || room.displayName.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesStatus =
      roomStatusFilter === '' ||
      (roomStatusFilter === 'bookable' && room.is_bookable) ||
      (roomStatusFilter === 'restricted' && !room.is_bookable);

    return matchesLocation && matchesSearch && matchesStatus;
  });

<FormControl sx={{ minWidth: 180 }}>
                  <InputLabel>Location</InputLabel>
                  <theme.StyledSelect
                    value={locationFilter}
                    onChange={(e) => setLocationFilter(e.target.value)}
                    label="Location"
                    displayEmpty  
                  >

                    <MenuItem key="All" value="">All</MenuItem> 
                    {uniqueLocations.map((loc, idx) => (
                      <MenuItem key={idx} value={loc}>{loc}</MenuItem>
                    ))}
                  </theme.StyledSelect>
                </FormControl>

                <FormControl sx={{ minWidth: 180 }}>
                  <InputLabel>Room Status</InputLabel>
                  <theme.StyledSelect
                    value={roomStatusFilter}
                    onChange={(e) => setRoomStatusFilter(e.target.value)}
                    label="Room Status"
                  >
                    <MenuItem value="">All</MenuItem> 
                    <MenuItem value="bookable">Bookable</MenuItem>
                    <MenuItem value="restricted">Restricted</MenuItem>
                  </theme.StyledSelect>
                </FormControl>
                
                <TextField
                variant="outlined"
                placeholder="Search rooms by name"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                size="small"
                sx={{
                  flex: 1,
                  maxWidth: 400,
                  '& .MuiOutlinedInput-root': {
                    borderRadius: '50px',
                  },
                }}
                InputProps={{
                  startAdornment: (
                    <InputAdornment position="start">
                      <SearchIcon />
                    </InputAdornment>
                  ),
                }}
                />
                {(locationFilter!=='' || roomStatusFilter!=='' || searchQuery) && (
                
                <theme.StyledButton  sx={{fontSize: '0.8rem',fontWeight: 600, backgroundColor:'white' ,color: "#3f50b5",
                  '&:hover': {
                  backgroundColor: 'white',
                  transform: 'translateY(0px)',
                  boxShadow: '0 8px 20px white',
                }
                }}
                 onClick={() => {
                  setLocationFilter('')
                  setRoomStatusFilter('')
                  setSearchQuery('')
                }}>Clear Filter</theme.StyledButton>
              )}
